import 'package:bookly/Core/Utils/Entities/book_entities.dart';import 'package:bookly/Feature/Home/presentation/manager/MainCubit/main_cubit.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:url_launcher/url_launcher.dart';import '../../../../../Core/Utils/Resources/methods.dart';import '../../../../../Core/Utils/Resources/text_style.dart';import '../../../../../Core/Utils/Widget/custom_scaffold_messenger.dart';class ButtonBuilder extends StatefulWidget {  final BookEntities item;  const ButtonBuilder({super.key, required this.item});  @override  State<ButtonBuilder> createState() => _ButtonBuilderState();}class _ButtonBuilderState extends State<ButtonBuilder> {  void _salary() async {    if (widget.item.saleInfo!.saleability != "FREE") {      if (widget.item.saleInfo!.isEbook!) {        MainCubit.get(context).addBookMap(widget.item);      } else {        showSnackBar(context, 'is not Available Now...');      }    } else if (widget.item.pdf!.isAvailable! &&        widget.item.pdf!.downloadLink?.isNotEmpty == true) {      final pdfUrl = widget.item.pdf!.downloadLink!;      final Uri urlLink = Uri.parse(pdfUrl);      if (await launchUrl(urlLink)) {        await launchUrl(          urlLink,        );      }    }  }  Future<void> _preview() async {    final Uri urlLink = Uri.parse(widget.item.previewLink!);    if (await launchUrl(urlLink)) {      await launchUrl(        urlLink,      );    }  }  @override  Widget build(BuildContext context) {    return BlocConsumer<MainCubit, MainState>(      listener: (context, state) {        if (state is AddSuccessful) {          showSnackBar(context, 'Added in Card');        }        if (state is AddError) {          showSnackBar(context, 'IS Already in Card');        }      },      builder: (context, state) {        return Padding(          padding: const EdgeInsets.only(top: 37),          child: Row(            mainAxisAlignment: MainAxisAlignment.center,            children: [              InkWell(                onTap: () => _salary(),                child: Container(                  height: 50,                  width: MediaQuery.of(context).size.width * .40,                  decoration: const BoxDecoration(                      color: Color(0xffFFFFFF),                      borderRadius:                          BorderRadius.horizontal(left: Radius.circular(15))),                  child: Center(                    child: Text(                      maxLines: 1,                      isFree(widget.item.saleInfo!),                      style: Styles.textStyle20.copyWith(                          fontWeight: FontWeight.bold, color: Colors.black),                    ),                  ),                ),              ),              InkWell(                onTap: () => _preview(),                child: Container(                  height: 50,                  width: MediaQuery.of(context).size.width * .40,                  decoration: const BoxDecoration(                      color: Color(0xffEF8262),                      borderRadius:                          BorderRadius.horizontal(right: Radius.circular(15))),                  child: const Center(                    child: Text(                      "preview",                      style: Styles.textStyle16,                    ),                  ),                ),              )            ],          ),        );      },    );  }}