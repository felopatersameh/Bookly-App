import 'package:bookly/Core/Utils/Errors/failure.dart';import 'package:bookly/Core/Utils/Entities/book_entities.dart';import 'package:bookly/Core/network/api_keys.dart';import 'package:bookly/Feature/Research/data/repositories/search_repo.dart';import 'package:dartz/dartz.dart';import 'package:dio/dio.dart';import '../../../../Core/Utils/Models/book_model.dart';import '../../../../Core/network/dio.dart';class SearchRepoImpl implements SearchRepo {  @override  Future<Either<Failure, List<BookEntities>>> search(      {required String category}) async {    try {      var data = await DioHelper.getData(path: '${AppEndPoint.search}$category');      List<BookModel> books = [];      for (final item in data.data["items"]) {        if (item != null) {          books.add(BookModel.fromJson(item));        }      }      return right(books);    } catch (e) {      if (e is DioException) {        return left(ServerFailure.fromDioError(e));      } else {        return left(ServerFailure.fromResponse(e.hashCode, e));      }    }  }}